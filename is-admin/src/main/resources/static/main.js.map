{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport {CookieService} from \"ngx-cookie-service\";\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'microservice security';\n  authenticated = false;\n  credentials = {username: 'xixi', password: '123456'}\n  order = {}\n\n  constructor(private http: HttpClient, private cookieService: CookieService) {\n    this.http.get(\"api/user/me\").subscribe(data => {\n      if(data) {\n        this.authenticated = true;\n      }\n\n      if(!this.authenticated) {\n        window.location.href = \"http://auth.demo.com:9090/oauth/authorize?\" +\n          \"client_id=admin&\" +\n          \"redirect_uri=http://admin.demo.com:8080/oauth/callback&\" +\n          \"response_type=code&\" +\n          \"state=abc\";\n      }\n    })\n  }\n\n  login() {\n    this.http.post('login', this.credentials).subscribe(() => {\n      this.authenticated = true;\n    }, () => {\n      alert('login fail')\n    });\n  }\n\n  getOrder() {\n    this.http.get('api/order/orders/1').subscribe(data => {\n      this.order = data;\n    }, () => {\n      alert('get order fail')\n    })\n  }\n\n  logout() {\n    this.cookieService.delete('demo_access_token', \"/\", \"demo.com\")\n    this.cookieService.delete('demo_refresh_token', \"/\", \"demo.com\")\n    this.http.post('logout', null).subscribe(() => {\n      window.location.href = \"http://auth.demo.com:9090/logout?redirect_uri=http://admin.demo.com:8080\"\n    }, () => {\n      alert('logout fail')\n    })\n  }\n}\n","<div [hidden]=\"!authenticated\" style=\"text-align:center\">\n  <h1>\n    Welcome to {{ title }}!!\n  </h1>\n  <button (click)=\"getOrder()\" type=\"button\" class=\"btn btn-primary\">Get Order Info</button>\n  <p>order id :{{ order }}</p >\n<!--  <p>order id :{{ order.id }}</p >-->\n<!--  <p>order product id :{{ order.productId }}</p >-->\n  <button (click)=\"logout()\" type=\"button\" class=\"btn btn-primary\">Logout</button>\n</div>\n\n<!--<div class=\"row\">-->\n<!--  <div class=\"col-lg-4\"></div>-->\n<!--  <div class=\"col-lg-4\">-->\n<!--    <div [hidden]=\"authenticated\">-->\n<!--      <p>please login</p>-->\n<!--      <form role=\"form\" (submit)=\"login()\">-->\n<!--        <div class=\"form-group\">-->\n<!--          <label for=\"username\">Username:</label>-->\n<!--          <input type=\"text\" class=\"form-control\" id=\"username\" [(ngModel)]=\"credentials.username\" />-->\n<!--        </div>-->\n<!--        <div class=\"form-group\">-->\n<!--          <label for=\"password\">Password:</label>-->\n<!--          <input type=\"password\" class=\"form-control\" id=\"password\" [(ngModel)]=\"credentials.password\" />-->\n<!--        </div>-->\n<!--        <button type=\"submit\" class=\"btn btn-primary\">Login</button>-->\n<!--      </form>-->\n<!--    </div>-->\n<!--  </div>-->\n<!--  <div class=\"col-lg-4\"></div>-->\n<!--</div>-->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from \"@angular/forms\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\n\nimport { AppComponent } from './app.component';\nimport {RefreshInterceptor} from \"./app.interceptor\";\n\nimport {CookieService} from \"ngx-cookie-service\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    CookieService,\n    { provide: HTTP_INTERCEPTORS, useClass: RefreshInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse\n} from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport {CookieService} from \"ngx-cookie-service\";\n\n\n/** Pass untouched request through to the next request handler. */\n@Injectable()\nexport class RefreshInterceptor implements HttpInterceptor {\n\n  constructor(private http: HttpClient, private cookieService: CookieService) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap(\n        () => {},\n        error => {\n          console.log(error);\n          if (error.status === 500 && error.error.message === 'refresh fail') {\n            this.logout();\n          }\n        }));\n  }\n\n    logout() {\n      this.cookieService.delete('demo_access_token', \"/\", \"demo.com\")\n      this.cookieService.delete('demo_refresh_token', \"/\", \"demo.com\")\n      this.http.post('logout', {}).subscribe(() => {\n        window.location.href = 'http://auth.demo.com:9090/logout?redirect_uri=http://admin.demo.com:8080';\n      }, () => {\n        alert('logout fail')\n      });\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}